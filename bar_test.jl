
using YAML, ApproxOperator

ndiv = 10
config1 = YAML.load_file("./yml/bar.yml")
path = "./msh/bar_10.msh"

elements1, nodes1 = importmsh(path,config1)
config2 = YAML.load_file("./yml/bar1.yml")
elements2, nodes2 = importmsh(path,path,config2)

n‚Çö‚ÇÅ = length(nodes1)
n‚Çö‚ÇÇ = length(nodes2)

set_memory_ùó†!(elements1["Œ©ÃÉ"],:‚àáÃÉ)
set_memory_ùó†!(elements2["Œ©ÃÉ"],:‚àáÃÉ)

s = 2.5/ndiv*ones(n‚Çö‚ÇÅ)
s = 2.5/ndiv*ones(n‚Çö‚ÇÇ)

push!(nodes1,:s‚ÇÅ=>s,:s‚ÇÇ=>s,:s‚ÇÉ=>s)
push!(nodes2,:s‚ÇÅ=>s,:s‚ÇÇ=>s,:s‚ÇÉ=>s)

setùù≠!(elements1["Œ©"])
set‚àáÃÉùù≠!(elements1["Œ©ÃÉ"],elements1["Œ©"])
set‚àáùù≠!(elements1["Œì·µç"])

setùù≠!(elements2["Œ©"])
set‚àáÃÉùù≠!(elements2["Œ©ÃÉ"],elements2["Œ©"])
set‚àáùù≠!(elements2["Œì·µç"])

prescribe!(elements1["Œ©"],:b=>(x,y,z)->1.0)
prescribe!(elements1["Œì·µç"],:g=>(x,y,z)->x)
prescribe!([elements1["Œì·µç"][1]],:n‚ÇÅ=>(x,y,z)->-1.0)
prescribe!(elements1["Œì·µç"][2],:n‚ÇÅ=>(x,y,z)->1.0)

prescribe!(elements2["Œ©"],:b=>(x,y,z)->1.0)
prescribe!(elements2["Œì·µç"],:g=>(x,y,z)->x)
prescribe!([elements2["Œì·µç"][1]],:n‚ÇÅ=>(x,y,z)->-1.0)
prescribe!(elements2["Œì·µç"][2],:n‚ÇÅ=>(x,y,z)->1.0)

ops = [
    Operator{:‚à´‚àáv‚àáudŒ©}(:k=>1.0),
    Operator{:‚à´vbdŒ©}(),
    Operator{:‚à´vtdŒì}(),
    Operator{:‚à´‚àáùëõvgdŒì}(:k=>1.0),
    Operator{:‚à´vgdŒì}(:Œ±=>1e3)
]

k1 = zeros(n‚Çö‚ÇÅ,n‚Çö‚ÇÅ)
f1 = zeros(n‚Çö‚ÇÅ)
k2 = zeros(n‚Çö‚ÇÇ,n‚Çö‚ÇÇ)
f2= zeros(n‚Çö‚ÇÇ)
ops[1](elements1["Œ©ÃÉ"],k1)
# ops[2](elements1["Œ©"],f1)
# ops[3](elements["Œì·µó"],f)
# ops[4](elements1["Œì·µç"],k1,f1)
# ops[5](elements1["Œì·µç"],k1,f1)

ops[1](elements2["Œ©ÃÉ"],k2)
# ops[2](elements2["Œ©"],f2)
# ops[3](elements["Œì·µó"],f)
# ops[4](elements2["Œì·µç"],k2,f2)
# ops[5](elements2["Œì·µç"],k2,f2)

# d1 = k1\f1
# d2 = k2\f2
F=f1-f2
K=k1-k2
# D=d1-d2
