
using  ApproxOperator, LinearAlgebra, Printf
include("input.jl")
elements, nodes = import_gauss_quadratic("./msh/cook_membrance_10.msh",:TriGI3)

Œ∫ = 400942
Œº = 80.1938
E = 9*Œ∫*Œº/(3*Œ∫+Œº)
ŒΩ = (3*Œ∫-2*Œº)/2/(3*Œ∫+Œº)
# E = 70.0
# ŒΩ = 0.3333

n‚Çö = length(nodes)
n‚Çë = length(elements["Œ©"])
s = 2.5*44/10*ones(n‚Çö)
push!(nodes,:s‚ÇÅ=>s,:s‚ÇÇ=>s,:s‚ÇÉ=>s)

setùù≠!(elements["Œ©"])
set‚àáùù≠!(elements["Œ©"])
setùù≠!(elements["Œì·µó"])
setùù≠!(elements["Œì·µç"])

prescribe!(elements["Œì·µó"],:t‚ÇÅ=>(x,y,z)->0.0)
prescribe!(elements["Œì·µó"],:t‚ÇÇ=>(x,y,z)->100.0)

prescribe!(elements["Œì·µç"],:g‚ÇÅ=>(x,y,z)->0.0)
prescribe!(elements["Œì·µç"],:g‚ÇÇ=>(x,y,z)->0.0)
prescribe!(elements["Œì·µç"],:n‚ÇÅ‚ÇÅ=>(x,y,z)->1.0)
prescribe!(elements["Œì·µç"],:n‚ÇÅ‚ÇÇ=>(x,y,z)->0.0)
prescribe!(elements["Œì·µç"],:n‚ÇÇ‚ÇÇ=>(x,y,z)->1.0)

ops = [
    Operator{:‚à´‚à´Œµ·µ¢‚±ºœÉ·µ¢‚±ºdxdy}(:E=>E,:ŒΩ=>ŒΩ),
    Operator{:‚à´v·µ¢t·µ¢ds}(),
    Operator{:‚à´œÉ·µ¢‚±ºn‚±ºg·µ¢ds}(:E=>E,:ŒΩ=>ŒΩ),
    Operator{:‚à´v·µ¢g·µ¢ds}(:Œ±=>1e4*E)
]

k = zeros(2*n‚Çö,2*n‚Çö)
kŒ± = zeros(2*n‚Çö,2*n‚Çö)
f = zeros(2*n‚Çö)
fŒ± = zeros(2*n‚Çö)
fint = zeros(2*n‚Çö)
fext = zeros(2*n‚Çö)
d = zeros(2*n‚Çö)
Œîd= zeros(2*n‚Çö)
d‚ÇÅ = zeros(n‚Çö)
d‚ÇÇ = zeros(n‚Çö)

push!(nodes,:d‚ÇÅ=>d‚ÇÅ,:d‚ÇÇ=>d‚ÇÇ)
ops[1](elements["Œ©"],k)
ops[2](elements["Œì·µó"],f)
ops[3](elements["Œì·µç"],k,f)
ops[4](elements["Œì·µç"],k,f)
d = k\f
        d‚ÇÅ .= d[1:2:2*n‚Çö]
        d‚ÇÇ .= d[2:2:2*n‚Çö]

u‚ÇÅ=d‚ÇÅ[3]
u‚ÇÇ=d‚ÇÇ[3]
println(u‚ÇÇ)
